{"version":3,"sources":["component/Cardlist.js","component/SearchBox.js","component/Scroll.js","component/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","this","setState","Component","App","onSearchchange","event","searchfield","target","value","fetch","then","response","json","users","filterdRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAsBeA,EAnBE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,eCSLC,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVC,KAAK,SACLC,YAAY,YACZC,SAAUJ,OCMHK,EAbA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,YCUEC,E,kDAlBX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,UAAU,GAHJ,E,qDAOjB,WACIC,KAAKC,SAAS,CAACF,UAAU,M,oBAG1B,WACI,OAAIC,KAAKF,MAAMC,SACJ,mEAEJC,KAAKT,MAAMK,a,GAhBCM,aC8CZC,G,wDAxCb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAf1C,EAAKV,MAAQ,CACXhB,OAAQ,GACRwB,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKZ,SAAS,CAAEnB,OAAQ+B,S,oBAO7C,WACE,MAAgCb,KAAKF,MAA7BhB,EAAR,EAAQA,OAAQwB,EAAhB,EAAgBA,YACVQ,EAAgBhC,EAAOiC,QAAO,SAACC,GACnC,OAAOA,EAAMC,KAAKC,cAAcC,SAASb,EAAYY,kBAGvD,OAAQpC,EAAOsC,OAGb,sBAAKlC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWD,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUtB,OAAQgC,WAPxB,kD,GA3BYZ,cCKHmB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3acbecf.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"../component/Card\";\n\nconst CardList = ({ robots }) => {\n  if(true){\n    throw new Error('Nooooooooo');\n  }\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search...\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"5px solid black\",\n        height: \"800px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\nexport default Scroll;\n","import React, { Component} from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor() {\n        super(); \n        this.state = {\n            hasError: false\n        }\n    }\n\n componentDidCatch(){\n     this.setState({hasError: true})\n }\n\n    render () {\n        if (this.state.hasError) {\n            return <h1> Oooooooopss .. Thats not Good !!</h1>\n        }\n        return this.props.children;\n    }\n} \nexport default ErrorBoundry;","import React, { Component } from \"react\";\nimport CardList from \"../component/Cardlist\";\nimport SearchBox from \"../component/SearchBox\";\nimport Scroll from \"../component/Scroll\";\nimport ErrorBoundry from \"../component/ErrorBoundry\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n    // console.log('constructor');\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n    // console.log(\"componentDidMount\")\n  }\n\n  onSearchchange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n  render() {\n    const { robots, searchfield } = this.state;\n    const filterdRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    // console.log(\"render\")\n    return !robots.length ? (\n      <h1> Loading ...</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\"> RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchchange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filterdRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}